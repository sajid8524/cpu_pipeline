$date
	Sat Jun 28 12:55:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_register_file $end
$var wire 32 ! read_data2 [31:0] $end
$var wire 32 " read_data1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ read_addr1 [4:0] $end
$var reg 5 % read_addr2 [4:0] $end
$var reg 1 & reset $end
$var reg 5 ' write_addr [4:0] $end
$var reg 32 ( write_data [31:0] $end
$var reg 1 ) write_enable $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 5 * read_addr1 [4:0] $end
$var wire 5 + read_addr2 [4:0] $end
$var wire 1 & reset $end
$var wire 5 , write_addr [4:0] $end
$var wire 32 - write_data [31:0] $end
$var wire 1 ) write_enable $end
$var wire 32 . read_data2 [31:0] $end
$var wire 32 / read_data1 [31:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
0)
b0 (
b0 '
1&
b0 %
b0 $
0#
b0 "
b0 !
$end
#5000
b100000 0
1#
#10000
0#
1)
b10010001101000101011001111000 (
b10010001101000101011001111000 -
b1 '
b1 ,
0&
#15000
1#
#20000
b10010001101000101011001111000 "
b10010001101000101011001111000 /
0#
b1 $
b1 *
0)
#25000
1#
1)
b11011110101011011011111011101111 (
b11011110101011011011111011101111 -
b0 '
b0 ,
#30000
0#
#35000
b0 "
b0 /
1#
b0 $
b0 *
0)
#40000
b10101011110011011110111100000001 "
b10101011110011011110111100000001 /
0#
b10 $
b10 *
1)
b10101011110011011110111100000001 (
b10101011110011011110111100000001 -
b10 '
b10 ,
#45000
b11001010111111101011101010111110 !
b11001010111111101011101010111110 .
b10010001101000101011001111000 "
b10010001101000101011001111000 /
1#
b11 %
b11 +
b1 $
b1 *
b11001010111111101011101010111110 (
b11001010111111101011101010111110 -
b11 '
b11 ,
#50000
0#
#55000
1#
#60000
0#
