$date
	Fri Jun 27 12:07:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu $end
$var wire 1 ! zero $end
$var wire 32 " result [31:0] $end
$var reg 32 # a [31:0] $end
$var reg 4 $ alu_control [3:0] $end
$var reg 32 % b [31:0] $end
$var integer 32 & error_count [31:0] $end
$var integer 32 ' test_count [31:0] $end
$scope module uut $end
$var wire 32 ( a [31:0] $end
$var wire 4 ) alu_control [3:0] $end
$var wire 32 * b [31:0] $end
$var wire 1 ! zero $end
$var reg 32 + result [31:0] $end
$upscope $end
$scope task check_result $end
$var reg 32 , a_val [31:0] $end
$var reg 32 - b_val [31:0] $end
$var reg 32 . expected [31:0] $end
$var reg 4 / operation [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx /
bx .
bx -
bx ,
b101000 +
b11001 *
b0 )
b1111 (
b0 '
b0 &
b11001 %
b0 $
b1111 #
b101000 "
0!
$end
#10000
b11110 "
b11110 +
b1 $
b1 )
b10100 %
b10100 *
b110010 #
b110010 (
b1 '
b11001 -
b1111 ,
b0 /
b101000 .
#20000
b1111000000000000111100000000 "
b1111000000000000111100000000 +
b10 $
b10 )
b1111111100000000111111110000 %
b1111111100000000111111110000 *
b11111111000000001111111100000000 #
b11111111000000001111111100000000 (
b10 '
b10100 -
b110010 ,
b1 /
b11110 .
#30000
b11111111111111111111111111111111 "
b11111111111111111111111111111111 +
b11 $
b11 )
b1111000011110000111100001111 %
b1111000011110000111100001111 *
b11110000111100001111000011110000 #
b11110000111100001111000011110000 (
b11 '
b1111111100000000111111110000 -
b11111111000000001111111100000000 ,
b10 /
b1111000000000000111100000000 .
#40000
b100 $
b100 )
b1010101010101010101010101010101 %
b1010101010101010101010101010101 *
b10101010101010101010101010101010 #
b10101010101010101010101010101010 (
b100 '
b1111000011110000111100001111 -
b11110000111100001111000011110000 ,
b11 /
b11111111111111111111111111111111 .
#50000
b10000 "
b10000 +
b101 $
b101 )
b100 %
b100 *
b1 #
b1 (
b101 '
b1010101010101010101010101010101 -
b10101010101010101010101010101010 ,
b100 /
#60000
b1000000000000000000000000000 "
b1000000000000000000000000000 +
b110 $
b110 )
b10000000000000000000000000000000 #
b10000000000000000000000000000000 (
b110 '
b100 -
b1 ,
b101 /
b10000 .
#70000
b11111000000000000000000000000000 "
b11111000000000000000000000000000 +
b111 $
b111 )
b111 '
b10000000000000000000000000000000 ,
b110 /
b1000000000000000000000000000 .
#80000
b1 "
b1 +
b1000 $
b1000 )
b1 %
b1 *
b11111111111111111111111111111111 #
b11111111111111111111111111111111 (
b1000 '
b111 /
b11111000000000000000000000000000 .
#90000
1!
b0 "
b0 +
b1001 $
b1001 )
b1001 '
b1 -
b11111111111111111111111111111111 ,
b1000 /
b1 .
#100000
b1 $
b1 )
b101 %
b101 *
b101 #
b101 (
b1010 '
b1001 /
b0 .
#110000
b0 $
b0 )
b1 %
b1 *
b11111111111111111111111111111111 #
b11111111111111111111111111111111 (
#120000
b11 $
b11 )
b0 %
b0 *
b0 #
b0 (
#130000
b1011 '
b0 -
b0 ,
b11 /
